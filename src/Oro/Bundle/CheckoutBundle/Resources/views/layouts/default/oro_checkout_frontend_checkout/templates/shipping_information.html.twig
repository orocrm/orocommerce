{% block _checkout_form_fields_widget -%}
    {% from '@OroAddress/macros.html.twig' import renderAddress %}
    {% import '@OroUI/layouts/macros.html.twig' as UI %}
    {% import '@OroUI/layouts/renderIcon.html.twig' as renderIcon %}

    {% if workflowItem.data.get('disallow_shipping_address_edit') %}
        <fieldset class="grid-col-6 grid-col-mobile-landscape-12">
            {{ renderAddress(checkout.shippingAddress, true) }}
        </fieldset>
    {% else %}
        {% import '@OroCheckout/layouts/default/oro_checkout_frontend_checkout/templates/address.html.twig' as address %}
        {% set showAddressForm =
                checkout.customerUser == null or
                checkout.customerUser.isGuest or
                form.shipping_address.customerAddress.vars.address_count == 0
        %}
        <div class="grid checkout-form__container" data-page-component-module="oroui/js/app/components/view-component"
             data-page-component-options="{{ {
                 view: 'orocheckout/js/app/views/address-view',
                 hideNewAddressForm: true,
                 selectors: {
                     address: '#' ~ form.shipping_address.customerAddress.vars.id,
                     region: '#' ~ form.shipping_address.region.vars.id,
                     fieldsContainer: '#checkout-address-fields-container',
                     shipToBillingCheckbox: '#' ~ form.ship_to_billing_address.vars.id,
                 }
             }|json_encode }}">

            <div class="grid-col-6 grid-col-tablet-12">
                {% set renderedAddress = checkout.shippingAddress ? checkout.shippingAddress|oro_format_address(null, ', ') : 'N/A'|trans %}
                {% set customerAddressClass = '' %}
                {% set customerAddressSelect2 = {
                    dropdownCssClass: 'oro-select2__dropdown select-multiline__dropdown',
                    dropdownAutoWidth: false
                } %}
                {% if showAddressForm %}
                    {% set customerAddressClass = ' hidden' %}
                    {% set customerAddressSelect2 = customerAddressSelect2|merge({
                        containerCssClass: 'hidden'
                    }) %}
                {% endif %}
                {% if not showAddressForm and feature_enabled('oro_address_validation') and oro_config_value('oro_checkout.validate_shipping_addresses__checkout') %}
                    {% set row_attr = {
                        'data-page-component-view': {
                            view: 'orocheckout/js/app/views/checkout-multi-step-address-validation-view',
                            dialogUrl: path('oro_checkout_address_validation_multi_step_shipping_address', { 'id': checkout.id }),
                            enableBillingValidation: oro_config_value('oro_checkout.validate_billing_addresses__checkout'),
                            enableShippingValidation: oro_config_value('oro_checkout.validate_shipping_addresses__checkout'),
                            step: 'enter_shipping_address',
                            isBillingAddressValid: (checkout.billingAddress.validatedAt|default(null) is not empty)
                        }|json_encode
                    }|merge(row_attr|default({})) %}
                {% endif %}
                {{ form_row(form.shipping_address.customerAddress, {
                    'parentClass': 'checkout-form__customer-address',
                    'attr': {
                        'class': customerAddressClass,
                        'data-new-address-label': renderedAddress,
                        'data-address-type': 'shipping'
                    },
                    'row_attr': row_attr|default({}),
                    'configs': form.shipping_address.customerAddress.vars.configs|default({})|merge(customerAddressSelect2)
                }) }}
            </div>

            <div class="grid-col-12">
                {% if workflowItem.data.get('billing_address_has_shipping') or checkout.shipToBillingAddress %}
                    <div class="selectable-group__item checkout-form__ship-to-billing-address">
                        {{ form_row(form.ship_to_billing_address) }}
                    </div>
                {% endif %}
            </div>

            <div class="grid-col-12">
                {% if showAddressForm %}
                    {{ address.address_form(form.shipping_address, form.save_shipping_address, null) }}
                {% endif %}

                {%  if form.state_token is defined %}
                    {{ form_row(form.state_token) }}
                {% endif %}

                {% if showAddressForm != true and is_granted('oro_order_address_shipping_allow_manual') %}
                    <div class="grid-col">
                        {{ UI.clientBtn({
                            'id': form.shipping_address.customerAddress.vars.id ~ '-btn',
                            'btnCss': 'btn btn--flat btn--size-small checkout-form__add-address',
                            'label' : 'oro.checkout.form.add_address.label'|trans,
                            'icon': 'plus',
                            'iconExtraClass': 'theme-icon--small',
                            'pageComponent': {
                                'view': 'orocheckout/js/app/views/add-address-button-view',
                                'options': {
                                    fieldId: form.shipping_address.customerAddress.vars.id,
                                    entityId: checkout.id,
                                    entityClass: oro_class_name(checkout),
                                    operations: {
                                        billing: 'b2b_flow_checkout_new_billing_address',
                                        shipping: 'b2b_flow_checkout_new_shipping_address'
                                    },
                                }
                            }
                        }) }}
                    </div>
                {% endif %}
            </div>
        </div>
    {% endif %}
{%- endblock %}
