{% block _checkout_form_fields_widget -%}
    {% from '@OroAddress/macros.html.twig' import renderAddress %}
    {% import '@OroUI/layouts/macros.html.twig' as UI %}
    {% import '@OroUI/layouts/renderIcon.html.twig' as renderIcon %}

    {% if workflowItem.data.get('disallow_billing_address_edit') %}
        {% set billingAddress = checkout.billingAddress %}
        <div class="grid">
            <div class="grid-col-6 grid-col-mobile-landscape-12">
                {{ renderAddress(checkout.billingAddress, true) }}
            </div>
        </div>
    {% else %}
        {% import '@OroCheckout/layouts/default/oro_checkout_frontend_checkout/templates/address.html.twig' as address %}
        {% set hasCustomAddress = false %}
        {% if form.billing_address.id.vars.value %}
            {% set hasCustomAddress = not form.billing_address.vars.value.customerUserAddress and not form.billing_address.vars.value.customerAddress %}
        {% endif %}
        {% set billingAddress = form.billing_address.vars.value %}
        <div class="grid" data-page-component-module="oroui/js/app/components/view-component"
             data-page-component-options="{{ {
                 view: 'orocheckout/js/app/views/address-view',
                 selectors: {
                     address: '#' ~ form.billing_address.customerAddress.vars.id,
                     region: '#' ~ form.billing_address.region.vars.id,
                     shipToBillingCheckbox: '#' ~ form.ship_to_billing_address.vars.id,
                     addAddressBtn: '#' ~ form.billing_address.customerAddress.vars.id ~ '-btn',
                     fieldsContainer: '#checkout-address-fields-container'
                 }
             }|json_encode }}">

            <div class="grid-col-6 grid-col-tablet-12">
                {{ form_row(form.billing_address.customerAddress) }}
            </div>

            <div class="grid-col-12">
                {{ address.address_form(form.billing_address, form.save_billing_address, hasCustomAddress, form.email) }}

                {% set hideShipping = true %}
                {% if billingAddress %}
                    {% set typedAddress = billingAddress.customerAddress %}
                    {% if typedAddress is empty %}
                        {% set typedAddress  = billingAddress.customerUserAddress %}
                    {% endif %}

                    {% set hideShipping = typedAddress is not empty and not typedAddress.hasTypeWithName('shipping')  %}
                {% endif %}

                {% if not workflowItem.data.get('disallow_shipping_address_edit') %}
                    <div data-ship-to-billing-container>
                        {{ form_row(form.ship_to_billing_address) }}
                    </div>
                {% endif %}

                {{ UI.clientBtn({
                    'btnCss': 'btn btn--flat',
                    'label' : 'Add Address',
                    'iconName': 'plus',
                    'dataUrl': path('oro_frontend_action_widget_form', {
                        operationName: 'b2b_flow_checkout_single_page_new_billing_address',
                        entityClass: 'Oro\\Bundle\\CheckoutBundle\\Entity\\Checkout',
                        entityId: checkout.id
                    }),
                    'widget' : {
                        'type' : 'dialog',
                        'options' : {
                            'hasForm': true,
                            'dialogOptions' : {
                                title: 'oro.checkout.billing_address.label'|trans,
                                width: 1000,
                                height: 'auto',
                                resizable: false,
                                modal: true,
                                dialogTitleIcon: 'map-pin'
                            }
                        }
                    }
                }) }}
            </div>
        </div>
    {% endif %}

    {%  if  form.state_token is defined %}
        {{ form_row(form.state_token) }}
    {% endif %}
{%- endblock %}
