{% extends '@OroUI/actions/update.html.twig' %}
{% import '@OroDataGrid/macros.html.twig' as dataGrid %}

{% oro_title_set({
    params : {
        "%sku%": entity.sku|default('N/A'|trans) ,
        "%name%": (entity.id ? entity.defaultName.string : '')|default('N/A'|trans),
        "%entityName%": 'oro.product.entity_label'|trans
    }
}) %}

{% if queryParams is defined %}
    {% set formAction = path('oro_product_create_step_two', queryParams) %}
{% else %}
    {% set formAction = path('oro_product_create_step_two') %}
{% endif %}

{% block navButtons %}
    {% import '@OroUI/macros.html.twig' as UI %}

    {{ parent() }}

    {{ UI.cancelButton(path('oro_product_index')) }}
    {% set html = UI.saveAndCloseButton({
        'route': 'oro_product_view',
        'params': {'id': '$id'}
    }) %}
    {% if is_granted('oro_product_create') %}
        {% set saveAndDuplicateButton = UI.buttonType({
            'type': 'submit',
            'class': 'btn-success main-group',
            'label': 'oro.product.ui.save_and_duplicate'|trans,
            'action': 'save_and_duplicate'
        }) %}
        {% set html = html ~ saveAndDuplicateButton %}
    {% endif %}
    {% if entity.id or is_granted('oro_product_update') %}
        {% set html = html ~ UI.saveAndStayButton({
            'route': 'oro_product_update',
            'params': {'id': '$id'}
        }) %}
    {% endif %}
    {{ UI.dropdownSaveButton({'html': html}) }}
{% endblock navButtons %}

{% block pageHeader %}
    {% if entity.id %}
        {% set breadcrumbs = {
            'entity':      entity,
            'indexPath':   path('oro_product_index'),
            'indexLabel': 'oro.product.entity_plural_label'|trans,
            'entityTitle': entity.sku ~ ' - ' ~ entity.defaultName
        } %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'oro.product.entity_label'|trans}) %}
        {% set stats %}
            {{ block('stats') }}
        {% endset %}
        {% include '@OroUI/page_title_block.html.twig' with { title: title, pageStatsBlock: stats } %}
    {% endif %}
{% endblock pageHeader %}

{% block stats %}
    {{ parent() }}
    {% if form.type is defined %}
        <li>
            {{- form.type.vars.label|trans -}}:&nbsp;{{- ('oro.product.type.' ~ form.type.vars.data)|trans|title -}}
        </li>
    {% endif %}
    {% if form.attributeFamily is defined %}
        <li>
            {{- form.attributeFamily.vars.label|trans -}}:&nbsp;{{- form.attributeFamily.vars.data.defaultLabel|title -}}
        </li>
    {% endif %}
    {% placeholder oro_product_step_two_info with {'form' : form} %}
{% endblock stats %}

{% block content_data %}
    {% set id = 'product-create-step-two' %}

    {% set generalData = {
        'sku': form_row(form.sku),
        'names': form_row(form.names)
    } %}

    {% if entity.isConfigurable %}
        {% set productsVariantSelector %}
            <div data-page-component-module="oroproduct/js/app/components/product-variant-component">
                {{ form_row(form.variantFields) }}
            </div>
        {% endset %}
        {% set generalData = generalData|merge([
            productsVariantSelector
        ]) %}
    {% endif %}

    {% if form.slugPrototypesWithRedirect is defined %}
        {% set generalData = generalData|merge([form_row(form.slugPrototypesWithRedirect)]) %}
    {% endif %}
    {% if form.status is defined %}
        {% set generalData = generalData|merge([form_row(form.status, {'separator':none})]) %}
    {% endif %}
    {% if form.featured is defined %}
        {% set generalData = generalData|merge([form_row(form.featured)]) %}
    {% endif %}
    {% if form.newArrival is defined %}
        {% set generalData = generalData|merge([form_row(form.newArrival)]) %}
    {% endif %}
    {% set additionalGeneralData = [] %}
    {% if form.brand is defined %}
        {% set additionalGeneralData = additionalGeneralData|merge([form_row(form.brand)]) %}
    {% endif %}
    {% if form.primaryUnitPrecision is defined %}
        {% set additionalGeneralData = additionalGeneralData|merge([form_row(form.primaryUnitPrecision)]) %}
    {% endif %}

    {% if oro_is_product_primary_unit_visible() and form.additionalUnitPrecisions is defined %}
        {% set additionalGeneralData = additionalGeneralData|merge([
            form_row(form.additionalUnitPrecisions)
        ]) %}
    {% endif %}

    {% set generalBlock = {
        'title': 'oro.product.sections.general'|trans,
        'class': 'active',
        'subblocks': [{
            'title': '',
            'data': generalData
        },
        {
            'title': '',
            'data': additionalGeneralData,
            'spanClass': 'responsive-cell'
        }
    ]} %}

    {% set dataBlocks = {'general': generalBlock} %}

    {% if form.shortDescriptions is defined %}
        {% set dataBlocks = dataBlocks|merge({
            'short_description': {
                'title': 'oro.product.short_descriptions.label'|trans,
                'subblocks': [{
                    'title': '',
                    'data': [form_widget(form.shortDescriptions)],
                }]
            }
        }) %}
    {% endif %}

    {% if form.descriptions is defined %}
        {% set dataBlocks = dataBlocks|merge({
            'description': {
                'title': 'oro.product.descriptions.label'|trans,
                'subblocks': [{
                    'title': '',
                    'data': [form_widget(form.descriptions)],
                }]
            }
        }) %}
    {% endif %}

    {% set dataBlocks = dataBlocks|merge(oro_form_additional_data(form, 'oro.product.sections.additional'|trans)) %}

    {% if form.inventory_status is defined %}
        {% set dataBlocks = dataBlocks|merge({
            'inventory': {
                'title': 'oro.product.sections.inventory'|trans,
                'priority': 5,
                'subblocks': [{
                    'title': '',
                    'data': {
                        'inventory_status': form_row(form.inventory_status)
                    }
                }]
            }
        }) %}
    {% endif %}

    {% if form.images is defined %}
        {% set dataBlocks = dataBlocks|merge({
            'images': {
                'title': 'oro.product.sections.images'|trans,
                'priority': 0,
                'subblocks': [{
                    'title': '',
                    'data': {
                        'images': form_row(form.images)
                    }
                }]
            }
        }) %}
    {% endif %}

    {% set dataBlocks = dataBlocks|merge({
        'design': {
            'title': 'oro.product.sections.design'|trans,
            'priority': 0,
            'subblocks': [{
                'title': '',
                'data': {
                    'pageTemplate': form_row(form.pageTemplate)
                }
            }]
        }
    }) %}

    {% set productHasVariants = (entity.isConfigurable and form.variantFields.vars.data|length != 0) %}

    {% if productHasVariants %}

        {% set dataGridParameters = {
            'parentProduct': 0,
            'attributeFamily': entity.attributeFamily.id
        } %}

        {% if form.variantLinks.appendVariants.vars.value|length != 0 %}
            {% set dataGridParameters = dataGridParameters|merge({appendVariants: form.variantLinks.appendVariants.vars.value}) %}
        {% endif %}

        {% set variantLinksForm = form.variantLinks %}
        {% set dataBlocks = dataBlocks|merge([{
            'title' : 'oro.product.sections.productVariants'|trans,
            'subblocks': [{
                'title' : null,
                'useSpan': false,
                'data' : [
                    form_row(form.defaultVariant),
                    form_widget(variantLinksForm.appendVariants, {'id': 'productAppendVariants'}),
                    form_widget(variantLinksForm.removeVariants, {'id': 'productRemoveVariants'}),
                    dataGrid.renderGrid('product-product-variants-edit', dataGridParameters, { cssClass: 'inner-grid' })
                ]
            }]
        }] ) %}
    {% endif %}

    {% if entity.isKit %}
        {% set dataBlocks = dataBlocks|merge({
            'kitItems': {
                'title': 'oro.product.sections.kit_items'|trans,
                'priority': 300,
                'subblocks': [{
                    'title': '',
                    'data': {
                        'kitItems': form_row(form.kitItems)
                    }
                }]
            }
        }) %}
    {% endif %}

    {% set data = {
        'formErrors': form_errors(form),
        'dataBlocks': dataBlocks
    }%}

    <div class="responsive-form-inner">
        {{ parent() }}
    </div>
{% endblock content_data %}
